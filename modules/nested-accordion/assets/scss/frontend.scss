.elementor-widget-n-accordion {
	--n-accordion-title-font-size: 15px;
	--n-accordion-title-padding: 0.5rem 1rem;
	--n-accordion-title-flex-grow: initial;
	--n-accordion-title-justify-content: initial;;
	--n-accordion-title-space-between: 0px;
	--n-accordion-title-distance-from-content: 0px;
	--n-accordion-title-icon-margin-block: 0rem;
	--n-accordion-title-icon-order: -1;
	--n-accordion-title-icon-padding-inline: 0 15px;
	--n-accordion-border-width: 1px;
	--n-accordion-border-color: #{$gray-light};
	--n-accordion-border-style: solid;

	.e-n-accordion {

		&-item {
			display: flex;
			flex-direction: column;
			position: relative;

			> .e-con {
				border-width: var(--n-accordion-border-width);
				border-color: var(--n-accordion-border-color);
				border-style: var(--n-accordion-border-style);
			}

			&-title {
				display: flex;
				flex-direction: row;
				list-style: none;
				padding: var(--n-accordion-title-padding);
				border-width: var(--n-accordion-border-width);
				border-color: var(--n-accordion-border-color);
				border-style: var(--n-accordion-border-style);
				justify-content: var(--n-accordion-title-justify-content);
				flex-grow: var(--n-menu-title-flex-grow);

				&-icon {
					display: flex;
					flex-direction: row;
					align-items: center;
					padding-inline: var( --n-accordion-title-icon-padding-inline );
					order: var( --n-accordion-title-icon-order );
					overflow: hidden;
					position: relative;
					width: fit-content;
					margin-block: var(--n-accordion-title-icon-margin-block);

					span > i {
						color: var(--n-accordion-icon-color);
					}

					span > svg {
						fill: var(--n-accordion-icon-color);
					}
				}

				& > span {
					cursor: pointer;
				}
			}

			&[open] {
				.e-opened {
					display: flex;
				}

				.e-closed {
					display: none;
				}
			}

			&:not([open]) {

				.e-opened {
					display: none;
				}

				.e-closed {
					display: flex;
				}
					span > svg {
						fill: var(--n-accordion-icon-color);
					}
				}

				& > span {
					cursor: pointer;
				}
			}
		}
	}
